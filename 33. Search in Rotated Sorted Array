public int Search(int[] nums, int target) {
      for(var i = nums.Length - 1;i >= 0;i--)
        {
            if(nums[i] == target)return i;
            else if(nums[i] < target)break;
        }
        
        for(var i = 0;i<nums.Length;i++)
        {
            if(nums[i] == target)return i;
            else if(nums[i] > target)break;
        }
        
        return -1;   
    }
    
    ------------Solution 2 ------------
     public int Search(int[] nums, int target) {
         int l = 0;
        int r = nums.Length - 1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if (nums[mid] == target) {
                return mid;
            }
            else if (nums[l] <= nums[mid]) {
                if (target >= nums[l] && target < nums[mid])
                    r = mid - 1; // move left
                else
                    l = mid + 1; // move right
            }
            else {
                if (target > nums[mid] && target <= nums[r])
                    l = mid + 1; // move right
                else
                    r = mid - 1; // move left 
            }
        }
        
        return -1;  
    }
