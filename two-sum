--Solution 1

public int[] TwoSum(int[] nums, int target) {
        int[] ret = new int[2];
        for(int i = 0; i < nums.Length - 1; i++){
            for(int j = i + 1; j < nums.Length; j++){
                if(nums[i] + nums[j] == target){
                    ret[0]=i;
                    ret[1]=j;
                    break;
                }
            }
        }
        return ret;
    }
    
    
--Solution 2

public class Solution {
    public int[] TwoSum(int[] nums, int target) {
        int[] ret = new int[2];
        Dictionary<int, int> di = new Dictionary<int, int>();
        int len = nums.Length;
        for(int i = 0; i < len; i++){
          if(!di.ContainsKey(nums[i])){
             di.Add(nums[i], i);    
          }  
         
        }
        for(int i = 0; i <= len - 1; i++){
                int num = target - nums[i];
                if(di.ContainsKey(num)){
                    if(i == di[num]){
                        continue;
                    }
                    ret[0]=i;
                    ret[1]=di[num];
                    break;
                }
        }
        return ret;
    }
}

